# coding: utf-8

"""
    OfficeGuy API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class BillingGeneralOpenUPayTerminalRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'bank_code': 'int',
        'branch_code': 'int',
        'account_number': 'str',
        'daily_credit': 'bool',
        'disable_payments_credit': 'bool',
        'enable_american_express_diners': 'bool',
        'enable_billing': 'bool',
        'email_address': 'str',
        'credentials': 'CoreAPICredentials'
    }

    attribute_map = {
        'bank_code': 'BankCode',
        'branch_code': 'BranchCode',
        'account_number': 'AccountNumber',
        'daily_credit': 'DailyCredit',
        'disable_payments_credit': 'DisablePaymentsCredit',
        'enable_american_express_diners': 'EnableAmericanExpressDiners',
        'enable_billing': 'EnableBilling',
        'email_address': 'EmailAddress',
        'credentials': 'Credentials'
    }

    def __init__(self, bank_code=None, branch_code=None, account_number=None, daily_credit=None, disable_payments_credit=None, enable_american_express_diners=None, enable_billing=None, email_address=None, credentials=None):  # noqa: E501
        """BillingGeneralOpenUPayTerminalRequest - a model defined in Swagger"""  # noqa: E501

        self._bank_code = None
        self._branch_code = None
        self._account_number = None
        self._daily_credit = None
        self._disable_payments_credit = None
        self._enable_american_express_diners = None
        self._enable_billing = None
        self._email_address = None
        self._credentials = None
        self.discriminator = None

        self.bank_code = bank_code
        self.branch_code = branch_code
        self.account_number = account_number
        if daily_credit is not None:
            self.daily_credit = daily_credit
        if disable_payments_credit is not None:
            self.disable_payments_credit = disable_payments_credit
        if enable_american_express_diners is not None:
            self.enable_american_express_diners = enable_american_express_diners
        if enable_billing is not None:
            self.enable_billing = enable_billing
        if email_address is not None:
            self.email_address = email_address
        self.credentials = credentials

    @property
    def bank_code(self):
        """Gets the bank_code of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501

        Bank code  # noqa: E501

        :return: The bank_code of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :rtype: int
        """
        return self._bank_code

    @bank_code.setter
    def bank_code(self, bank_code):
        """Sets the bank_code of this BillingGeneralOpenUPayTerminalRequest.

        Bank code  # noqa: E501

        :param bank_code: The bank_code of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :type: int
        """
        if bank_code is None:
            raise ValueError("Invalid value for `bank_code`, must not be `None`")  # noqa: E501

        self._bank_code = bank_code

    @property
    def branch_code(self):
        """Gets the branch_code of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501

        Bank branch code  # noqa: E501

        :return: The branch_code of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :rtype: int
        """
        return self._branch_code

    @branch_code.setter
    def branch_code(self, branch_code):
        """Sets the branch_code of this BillingGeneralOpenUPayTerminalRequest.

        Bank branch code  # noqa: E501

        :param branch_code: The branch_code of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :type: int
        """
        if branch_code is None:
            raise ValueError("Invalid value for `branch_code`, must not be `None`")  # noqa: E501

        self._branch_code = branch_code

    @property
    def account_number(self):
        """Gets the account_number of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501

        Bank account number  # noqa: E501

        :return: The account_number of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :rtype: str
        """
        return self._account_number

    @account_number.setter
    def account_number(self, account_number):
        """Sets the account_number of this BillingGeneralOpenUPayTerminalRequest.

        Bank account number  # noqa: E501

        :param account_number: The account_number of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :type: str
        """
        if account_number is None:
            raise ValueError("Invalid value for `account_number`, must not be `None`")  # noqa: E501

        self._account_number = account_number

    @property
    def daily_credit(self):
        """Gets the daily_credit of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501

        Daily credit (+0.3% commission)  # noqa: E501

        :return: The daily_credit of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :rtype: bool
        """
        return self._daily_credit

    @daily_credit.setter
    def daily_credit(self, daily_credit):
        """Sets the daily_credit of this BillingGeneralOpenUPayTerminalRequest.

        Daily credit (+0.3% commission)  # noqa: E501

        :param daily_credit: The daily_credit of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :type: bool
        """

        self._daily_credit = daily_credit

    @property
    def disable_payments_credit(self):
        """Gets the disable_payments_credit of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501

        Disable immediate payments (+0.75% per payment)  # noqa: E501

        :return: The disable_payments_credit of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :rtype: bool
        """
        return self._disable_payments_credit

    @disable_payments_credit.setter
    def disable_payments_credit(self, disable_payments_credit):
        """Sets the disable_payments_credit of this BillingGeneralOpenUPayTerminalRequest.

        Disable immediate payments (+0.75% per payment)  # noqa: E501

        :param disable_payments_credit: The disable_payments_credit of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :type: bool
        """

        self._disable_payments_credit = disable_payments_credit

    @property
    def enable_american_express_diners(self):
        """Gets the enable_american_express_diners of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501

        Enable support for American Express and Diners credit cards  # noqa: E501

        :return: The enable_american_express_diners of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :rtype: bool
        """
        return self._enable_american_express_diners

    @enable_american_express_diners.setter
    def enable_american_express_diners(self, enable_american_express_diners):
        """Sets the enable_american_express_diners of this BillingGeneralOpenUPayTerminalRequest.

        Enable support for American Express and Diners credit cards  # noqa: E501

        :param enable_american_express_diners: The enable_american_express_diners of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :type: bool
        """

        self._enable_american_express_diners = enable_american_express_diners

    @property
    def enable_billing(self):
        """Gets the enable_billing of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501

        Enable support for recurring payments (request CVV exempt)  # noqa: E501

        :return: The enable_billing of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :rtype: bool
        """
        return self._enable_billing

    @enable_billing.setter
    def enable_billing(self, enable_billing):
        """Sets the enable_billing of this BillingGeneralOpenUPayTerminalRequest.

        Enable support for recurring payments (request CVV exempt)  # noqa: E501

        :param enable_billing: The enable_billing of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :type: bool
        """

        self._enable_billing = enable_billing

    @property
    def email_address(self):
        """Gets the email_address of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501

        Opened account email address.<div><i>Leave empty for auto generated email address</i></div>  # noqa: E501

        :return: The email_address of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :rtype: str
        """
        return self._email_address

    @email_address.setter
    def email_address(self, email_address):
        """Sets the email_address of this BillingGeneralOpenUPayTerminalRequest.

        Opened account email address.<div><i>Leave empty for auto generated email address</i></div>  # noqa: E501

        :param email_address: The email_address of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :type: str
        """

        self._email_address = email_address

    @property
    def credentials(self):
        """Gets the credentials of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501

        Company API credentials  # noqa: E501

        :return: The credentials of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :rtype: CoreAPICredentials
        """
        return self._credentials

    @credentials.setter
    def credentials(self, credentials):
        """Sets the credentials of this BillingGeneralOpenUPayTerminalRequest.

        Company API credentials  # noqa: E501

        :param credentials: The credentials of this BillingGeneralOpenUPayTerminalRequest.  # noqa: E501
        :type: CoreAPICredentials
        """
        if credentials is None:
            raise ValueError("Invalid value for `credentials`, must not be `None`")  # noqa: E501

        self._credentials = credentials

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(BillingGeneralOpenUPayTerminalRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, BillingGeneralOpenUPayTerminalRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
