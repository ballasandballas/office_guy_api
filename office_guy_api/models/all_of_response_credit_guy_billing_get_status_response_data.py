# coding: utf-8

"""
    OfficeGuy API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2020-06-20
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class AllOfResponseCreditGuyBillingGetStatusResponseData(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'transmit_pending': 'int',
        'transmit_failed': 'int',
        'deposit_pending': 'int',
        'deposit_failed': 'int',
        'deposit_finished': 'int',
        'finished': 'bool',
        'transactions': 'list[CreditGuyBillingGetStatusResponseGetStatusResponseTransaction]'
    }
    if hasattr(CreditGuyBillingGetStatusResponse, "swagger_types"):
        swagger_types.update(CreditGuyBillingGetStatusResponse.swagger_types)

    attribute_map = {
        'transmit_pending': 'Transmit_Pending',
        'transmit_failed': 'Transmit_Failed',
        'deposit_pending': 'Deposit_Pending',
        'deposit_failed': 'Deposit_Failed',
        'deposit_finished': 'Deposit_Finished',
        'finished': 'Finished',
        'transactions': 'Transactions'
    }
    if hasattr(CreditGuyBillingGetStatusResponse, "attribute_map"):
        attribute_map.update(CreditGuyBillingGetStatusResponse.attribute_map)

    def __init__(self, transmit_pending=None, transmit_failed=None, deposit_pending=None, deposit_failed=None, deposit_finished=None, finished=None, transactions=None, *args, **kwargs):  # noqa: E501
        """AllOfResponseCreditGuyBillingGetStatusResponseData - a model defined in Swagger"""  # noqa: E501
        self._transmit_pending = None
        self._transmit_failed = None
        self._deposit_pending = None
        self._deposit_failed = None
        self._deposit_finished = None
        self._finished = None
        self._transactions = None
        self.discriminator = None
        if transmit_pending is not None:
            self.transmit_pending = transmit_pending
        if transmit_failed is not None:
            self.transmit_failed = transmit_failed
        if deposit_pending is not None:
            self.deposit_pending = deposit_pending
        if deposit_failed is not None:
            self.deposit_failed = deposit_failed
        if deposit_finished is not None:
            self.deposit_finished = deposit_finished
        if finished is not None:
            self.finished = finished
        if transactions is not None:
            self.transactions = transactions
        CreditGuyBillingGetStatusResponse.__init__(self, *args, **kwargs)

    @property
    def transmit_pending(self):
        """Gets the transmit_pending of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501

        Transactions pending transmit  # noqa: E501

        :return: The transmit_pending of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501
        :rtype: int
        """
        return self._transmit_pending

    @transmit_pending.setter
    def transmit_pending(self, transmit_pending):
        """Sets the transmit_pending of this AllOfResponseCreditGuyBillingGetStatusResponseData.

        Transactions pending transmit  # noqa: E501

        :param transmit_pending: The transmit_pending of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501
        :type: int
        """

        self._transmit_pending = transmit_pending

    @property
    def transmit_failed(self):
        """Gets the transmit_failed of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501

        Transactions failed on Shva  # noqa: E501

        :return: The transmit_failed of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501
        :rtype: int
        """
        return self._transmit_failed

    @transmit_failed.setter
    def transmit_failed(self, transmit_failed):
        """Sets the transmit_failed of this AllOfResponseCreditGuyBillingGetStatusResponseData.

        Transactions failed on Shva  # noqa: E501

        :param transmit_failed: The transmit_failed of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501
        :type: int
        """

        self._transmit_failed = transmit_failed

    @property
    def deposit_pending(self):
        """Gets the deposit_pending of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501

        Transactions successfully deposited on Shva  # noqa: E501

        :return: The deposit_pending of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501
        :rtype: int
        """
        return self._deposit_pending

    @deposit_pending.setter
    def deposit_pending(self, deposit_pending):
        """Sets the deposit_pending of this AllOfResponseCreditGuyBillingGetStatusResponseData.

        Transactions successfully deposited on Shva  # noqa: E501

        :param deposit_pending: The deposit_pending of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501
        :type: int
        """

        self._deposit_pending = deposit_pending

    @property
    def deposit_failed(self):
        """Gets the deposit_failed of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501

        Transactions failed while depositing on Shva  # noqa: E501

        :return: The deposit_failed of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501
        :rtype: int
        """
        return self._deposit_failed

    @deposit_failed.setter
    def deposit_failed(self, deposit_failed):
        """Sets the deposit_failed of this AllOfResponseCreditGuyBillingGetStatusResponseData.

        Transactions failed while depositing on Shva  # noqa: E501

        :param deposit_failed: The deposit_failed of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501
        :type: int
        """

        self._deposit_failed = deposit_failed

    @property
    def deposit_finished(self):
        """Gets the deposit_finished of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501

        Transactions deposited successfully on Shva  # noqa: E501

        :return: The deposit_finished of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501
        :rtype: int
        """
        return self._deposit_finished

    @deposit_finished.setter
    def deposit_finished(self, deposit_finished):
        """Sets the deposit_finished of this AllOfResponseCreditGuyBillingGetStatusResponseData.

        Transactions deposited successfully on Shva  # noqa: E501

        :param deposit_finished: The deposit_finished of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501
        :type: int
        """

        self._deposit_finished = deposit_finished

    @property
    def finished(self):
        """Gets the finished of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501

        Indication whether the billing process has finished  # noqa: E501

        :return: The finished of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501
        :rtype: bool
        """
        return self._finished

    @finished.setter
    def finished(self, finished):
        """Sets the finished of this AllOfResponseCreditGuyBillingGetStatusResponseData.

        Indication whether the billing process has finished  # noqa: E501

        :param finished: The finished of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501
        :type: bool
        """

        self._finished = finished

    @property
    def transactions(self):
        """Gets the transactions of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501

        Detailed list of transactions (Returned when ListTransactions = true)  # noqa: E501

        :return: The transactions of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501
        :rtype: list[CreditGuyBillingGetStatusResponseGetStatusResponseTransaction]
        """
        return self._transactions

    @transactions.setter
    def transactions(self, transactions):
        """Sets the transactions of this AllOfResponseCreditGuyBillingGetStatusResponseData.

        Detailed list of transactions (Returned when ListTransactions = true)  # noqa: E501

        :param transactions: The transactions of this AllOfResponseCreditGuyBillingGetStatusResponseData.  # noqa: E501
        :type: list[CreditGuyBillingGetStatusResponseGetStatusResponseTransaction]
        """

        self._transactions = transactions

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(AllOfResponseCreditGuyBillingGetStatusResponseData, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, AllOfResponseCreditGuyBillingGetStatusResponseData):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
