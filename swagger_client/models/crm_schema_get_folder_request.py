# coding: utf-8

"""
    OfficeGuy API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v3
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class CRMSchemaGetFolderRequest(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'folder': 'str',
        'include_properties': 'bool',
        'credentials': 'CoreAPICredentials'
    }

    attribute_map = {
        'folder': 'Folder',
        'include_properties': 'IncludeProperties',
        'credentials': 'Credentials'
    }

    def __init__(self, folder=None, include_properties=None, credentials=None):  # noqa: E501
        """CRMSchemaGetFolderRequest - a model defined in Swagger"""  # noqa: E501

        self._folder = None
        self._include_properties = None
        self._credentials = None
        self.discriminator = None

        self.folder = folder
        if include_properties is not None:
            self.include_properties = include_properties
        self.credentials = credentials

    @property
    def folder(self):
        """Gets the folder of this CRMSchemaGetFolderRequest.  # noqa: E501

        Folder identifier.<div><i>Can be either application folder name, or FolderID.</i></div>  # noqa: E501

        :return: The folder of this CRMSchemaGetFolderRequest.  # noqa: E501
        :rtype: str
        """
        return self._folder

    @folder.setter
    def folder(self, folder):
        """Sets the folder of this CRMSchemaGetFolderRequest.

        Folder identifier.<div><i>Can be either application folder name, or FolderID.</i></div>  # noqa: E501

        :param folder: The folder of this CRMSchemaGetFolderRequest.  # noqa: E501
        :type: str
        """
        if folder is None:
            raise ValueError("Invalid value for `folder`, must not be `None`")  # noqa: E501

        self._folder = folder

    @property
    def include_properties(self):
        """Gets the include_properties of this CRMSchemaGetFolderRequest.  # noqa: E501

        Get folder properties<div><i>Defaults to False</i></div>  # noqa: E501

        :return: The include_properties of this CRMSchemaGetFolderRequest.  # noqa: E501
        :rtype: bool
        """
        return self._include_properties

    @include_properties.setter
    def include_properties(self, include_properties):
        """Sets the include_properties of this CRMSchemaGetFolderRequest.

        Get folder properties<div><i>Defaults to False</i></div>  # noqa: E501

        :param include_properties: The include_properties of this CRMSchemaGetFolderRequest.  # noqa: E501
        :type: bool
        """

        self._include_properties = include_properties

    @property
    def credentials(self):
        """Gets the credentials of this CRMSchemaGetFolderRequest.  # noqa: E501

        Company API credentials  # noqa: E501

        :return: The credentials of this CRMSchemaGetFolderRequest.  # noqa: E501
        :rtype: CoreAPICredentials
        """
        return self._credentials

    @credentials.setter
    def credentials(self, credentials):
        """Sets the credentials of this CRMSchemaGetFolderRequest.

        Company API credentials  # noqa: E501

        :param credentials: The credentials of this CRMSchemaGetFolderRequest.  # noqa: E501
        :type: CoreAPICredentials
        """
        if credentials is None:
            raise ValueError("Invalid value for `credentials`, must not be `None`")  # noqa: E501

        self._credentials = credentials

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CRMSchemaGetFolderRequest, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CRMSchemaGetFolderRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
