# coding: utf-8

"""
    OfficeGuy API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 2020-06-20
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class Body51(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'documents_email_address_specified': 'bool',
        'documents_email_address': 'str',
        'accountant_email_specified': 'bool',
        'accountant_email': 'str',
        'income_tax_credit_for_donation': 'bool',
        'enable_custom_document_dates': 'bool',
        'documents_theme': 'Object',
        'credentials': 'Object'
    }
    if hasattr(AccountingGeneralUpdateSettingsRequest, "swagger_types"):
        swagger_types.update(AccountingGeneralUpdateSettingsRequest.swagger_types)

    attribute_map = {
        'documents_email_address_specified': 'DocumentsEmailAddressSpecified',
        'documents_email_address': 'DocumentsEmailAddress',
        'accountant_email_specified': 'AccountantEmailSpecified',
        'accountant_email': 'AccountantEmail',
        'income_tax_credit_for_donation': 'IncomeTaxCreditForDonation',
        'enable_custom_document_dates': 'EnableCustomDocumentDates',
        'documents_theme': 'DocumentsTheme',
        'credentials': 'Credentials'
    }
    if hasattr(AccountingGeneralUpdateSettingsRequest, "attribute_map"):
        attribute_map.update(AccountingGeneralUpdateSettingsRequest.attribute_map)

    def __init__(self, documents_email_address_specified=None, documents_email_address=None, accountant_email_specified=None, accountant_email=None, income_tax_credit_for_donation=None, enable_custom_document_dates=None, documents_theme=None, credentials=None, *args, **kwargs):  # noqa: E501
        """Body51 - a model defined in Swagger"""  # noqa: E501
        self._documents_email_address_specified = None
        self._documents_email_address = None
        self._accountant_email_specified = None
        self._accountant_email = None
        self._income_tax_credit_for_donation = None
        self._enable_custom_document_dates = None
        self._documents_theme = None
        self._credentials = None
        self.discriminator = None
        if documents_email_address_specified is not None:
            self.documents_email_address_specified = documents_email_address_specified
        if documents_email_address is not None:
            self.documents_email_address = documents_email_address
        if accountant_email_specified is not None:
            self.accountant_email_specified = accountant_email_specified
        if accountant_email is not None:
            self.accountant_email = accountant_email
        if income_tax_credit_for_donation is not None:
            self.income_tax_credit_for_donation = income_tax_credit_for_donation
        if enable_custom_document_dates is not None:
            self.enable_custom_document_dates = enable_custom_document_dates
        if documents_theme is not None:
            self.documents_theme = documents_theme
        self.credentials = credentials
        AccountingGeneralUpdateSettingsRequest.__init__(self, *args, **kwargs)

    @property
    def documents_email_address_specified(self):
        """Gets the documents_email_address_specified of this Body51.  # noqa: E501

        Indicates if the DocumentsEmailAddress should be updated  # noqa: E501

        :return: The documents_email_address_specified of this Body51.  # noqa: E501
        :rtype: bool
        """
        return self._documents_email_address_specified

    @documents_email_address_specified.setter
    def documents_email_address_specified(self, documents_email_address_specified):
        """Sets the documents_email_address_specified of this Body51.

        Indicates if the DocumentsEmailAddress should be updated  # noqa: E501

        :param documents_email_address_specified: The documents_email_address_specified of this Body51.  # noqa: E501
        :type: bool
        """

        self._documents_email_address_specified = documents_email_address_specified

    @property
    def documents_email_address(self):
        """Gets the documents_email_address of this Body51.  # noqa: E501

        Email address display on all documents<div><i>By default, the company email address will be displayed</i></div>  # noqa: E501

        :return: The documents_email_address of this Body51.  # noqa: E501
        :rtype: str
        """
        return self._documents_email_address

    @documents_email_address.setter
    def documents_email_address(self, documents_email_address):
        """Sets the documents_email_address of this Body51.

        Email address display on all documents<div><i>By default, the company email address will be displayed</i></div>  # noqa: E501

        :param documents_email_address: The documents_email_address of this Body51.  # noqa: E501
        :type: str
        """

        self._documents_email_address = documents_email_address

    @property
    def accountant_email_specified(self):
        """Gets the accountant_email_specified of this Body51.  # noqa: E501

        Indicates if the AccountantEmail should be updated  # noqa: E501

        :return: The accountant_email_specified of this Body51.  # noqa: E501
        :rtype: bool
        """
        return self._accountant_email_specified

    @accountant_email_specified.setter
    def accountant_email_specified(self, accountant_email_specified):
        """Sets the accountant_email_specified of this Body51.

        Indicates if the AccountantEmail should be updated  # noqa: E501

        :param accountant_email_specified: The accountant_email_specified of this Body51.  # noqa: E501
        :type: bool
        """

        self._accountant_email_specified = accountant_email_specified

    @property
    def accountant_email(self):
        """Gets the accountant_email of this Body51.  # noqa: E501

        Email address for sending all monthly documents each month  # noqa: E501

        :return: The accountant_email of this Body51.  # noqa: E501
        :rtype: str
        """
        return self._accountant_email

    @accountant_email.setter
    def accountant_email(self, accountant_email):
        """Sets the accountant_email of this Body51.

        Email address for sending all monthly documents each month  # noqa: E501

        :param accountant_email: The accountant_email of this Body51.  # noqa: E501
        :type: str
        """

        self._accountant_email = accountant_email

    @property
    def income_tax_credit_for_donation(self):
        """Gets the income_tax_credit_for_donation of this Body51.  # noqa: E501

        Indicates whether the NPO is 46a donations approved, and should be presented on donation receipts  # noqa: E501

        :return: The income_tax_credit_for_donation of this Body51.  # noqa: E501
        :rtype: bool
        """
        return self._income_tax_credit_for_donation

    @income_tax_credit_for_donation.setter
    def income_tax_credit_for_donation(self, income_tax_credit_for_donation):
        """Sets the income_tax_credit_for_donation of this Body51.

        Indicates whether the NPO is 46a donations approved, and should be presented on donation receipts  # noqa: E501

        :param income_tax_credit_for_donation: The income_tax_credit_for_donation of this Body51.  # noqa: E501
        :type: bool
        """

        self._income_tax_credit_for_donation = income_tax_credit_for_donation

    @property
    def enable_custom_document_dates(self):
        """Gets the enable_custom_document_dates of this Body51.  # noqa: E501

        Indicates documents can be created in any custom date.<div><i>By default, documents can only be created in a sequence order.</i></div>  # noqa: E501

        :return: The enable_custom_document_dates of this Body51.  # noqa: E501
        :rtype: bool
        """
        return self._enable_custom_document_dates

    @enable_custom_document_dates.setter
    def enable_custom_document_dates(self, enable_custom_document_dates):
        """Sets the enable_custom_document_dates of this Body51.

        Indicates documents can be created in any custom date.<div><i>By default, documents can only be created in a sequence order.</i></div>  # noqa: E501

        :param enable_custom_document_dates: The enable_custom_document_dates of this Body51.  # noqa: E501
        :type: bool
        """

        self._enable_custom_document_dates = enable_custom_document_dates

    @property
    def documents_theme(self):
        """Gets the documents_theme of this Body51.  # noqa: E501

        Choose documents printing theme.<div><i>By default, documents are created using the Material theme.</i></div>  # noqa: E501

        :return: The documents_theme of this Body51.  # noqa: E501
        :rtype: Object
        """
        return self._documents_theme

    @documents_theme.setter
    def documents_theme(self, documents_theme):
        """Sets the documents_theme of this Body51.

        Choose documents printing theme.<div><i>By default, documents are created using the Material theme.</i></div>  # noqa: E501

        :param documents_theme: The documents_theme of this Body51.  # noqa: E501
        :type: Object
        """

        self._documents_theme = documents_theme

    @property
    def credentials(self):
        """Gets the credentials of this Body51.  # noqa: E501

        Company API credentials  # noqa: E501

        :return: The credentials of this Body51.  # noqa: E501
        :rtype: Object
        """
        return self._credentials

    @credentials.setter
    def credentials(self, credentials):
        """Sets the credentials of this Body51.

        Company API credentials  # noqa: E501

        :param credentials: The credentials of this Body51.  # noqa: E501
        :type: Object
        """
        if credentials is None:
            raise ValueError("Invalid value for `credentials`, must not be `None`")  # noqa: E501

        self._credentials = credentials

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(Body51, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, Body51):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
